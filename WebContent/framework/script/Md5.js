/**
 * @fileoverview 定義處理 MD5 編碼的&#x5171;用函式
 *
 * @author Welkin Fan
 * @version 1.0
 */

/**
 * 定義處理 MD5 編碼的&#x5171;用函式Class
 * @constructor
 * @author Welkin Fan
 * @version 1.0
 */
function MD5()
{
}

/**
 * @final
 * @private
 */
MD5.hex_chr="0123456789abcdef";
/**
 * @final
 * @private
 */
MD5.chr_sz=8;

/**
 * @private
 */
MD5.binl2hex=function($0_)
{
	try
	{
		var $1_="";
		for(j=0;j<$0_.length*4;j++)
		{
			$1_+=MD5.hex_chr.charAt(($0_[j>>2] >> ((j%4)*8+4))&0xF)+MD5.hex_chr.charAt(($0_[j>>2] >> ((j%4)*8))&0xF);
		}
		return $1_;
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.binl2hex",arguments,ex));
	}
}

/**
 * @private
 */
MD5.str2binl=function($55_)
{		
	try
	{
	  var $56_ = new Array();
	  var $57_ = (1 << MD5.chr_sz) - 1;
	  for(var i = 0; i < $55_.length * MD5.chr_sz; i += MD5.chr_sz)
	    $56_[i>>5] |= ($55_.charCodeAt(i / MD5.chr_sz) & $57_) << (i%32);
	  return $56_;
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.str2binl",arguments,ex));
	}
}

/**
 * @private
 */
MD5.add=function($5_,$6_)
{
	try
	{
		var $7_=($5_&0xFFFF)+($6_&0xFFFF);
		var $8_=($5_ >> 16)+($6_ >> 16)+($7_ >> 16);
		
		return ($8_<<16)| ($7_&0xFFFF);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.add",arguments,ex));
	}
}

/**
 * @private
 */
MD5.rol=function($9_,$10_)
{
	try
	{
		return ($9_<<$10_)| ($9_ >>> (32 - $10_));
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.rol",arguments,ex));
	}
}

/**
 * @private
 */
MD5.cmn=function($11_,$12_,$13_,$14_,$15_,$16_)
{
	try
	{
		return MD5.add(MD5.rol(MD5.add(MD5.add($12_,$11_),MD5.add($14_,$16_)),$15_),$13_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.cmn",arguments,ex));
	}
}

/**
 * @private
 */
MD5.ff=function($17_,$18_,$19_,$20_,$21_,$22_,$23_)
{
	try
	{
		return MD5.cmn(($18_&$19_)| ((~$18_)&$20_),$17_,$18_,$21_,$22_,$23_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.ff",arguments,ex));
	}
}

/**
 * @private
 */
MD5.gg=function($24_,$25_,$26_,$27_,$28_,$29_,$30_)
{
	try
	{
		return MD5.cmn(($25_&$27_)| ($26_&(~$27_)),$24_,$25_,$28_,$29_,$30_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.gg",arguments,ex));
	}
}

/**
 * @private
 */
MD5.hh=function($31_,$32_,$33_,$34_,$35_,$36_,$37_)
{
	try
	{
		return MD5.cmn($32_ ^ $33_ ^ $34_,$31_,$32_,$35_,$36_,$37_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.hh",arguments,ex));
	}
}

/**
 * @private
 */
MD5.ii=function($38_,$39_,$40_,$41_,$42_,$43_,$44_)
{
	try
	{
		return MD5.cmn($40_ ^ ($39_ | (~$41_)),$38_,$39_,$42_,$43_,$44_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.ii",arguments,ex));
	}
}

/**
 * 將字串編碼成 MD5 格式
 * @param str 要編碼的字串 
 * @return 編碼後的字串
 * @type String
 */
MD5.encode=function(str)
{
	try
	{
		if (CheckUtil.isBig5(str))
		{
			str = EncodeUtil.Big5ToAscii(str);
		}
		return MD5.binl2hex(MD5.core_md5(MD5.str2binl(str), str.length * MD5.chr_sz));
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.encode",arguments,ex));
	}
}

/**
 * 將字串編碼成 HMAC-MD5 格式
 * @param str 要編碼的字串 
 * @param key 編碼所用的金鑰
 * @return 編碼後的字串
 * @type String
 */
MD5.encodeHMAC=function(str,key)
{
	try
	{
		if (CheckUtil.isBig5(str))
		{
			str = EncodeUtil.Big5ToAscii(str);
		}
		if (CheckUtil.isBig5(key))
		{
			key = EncodeUtil.Big5ToAscii(key);
		}
		return MD5.binl2hex(MD5.core_hmac_md5(str, key));
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.encodeHMAC",arguments,ex));
	}
}

/**
 * @private
 */
MD5.core_md5=function($45_,$46_)
{
	try
	{
		$45_[$46_ >> 5] |= 0x80 << (($46_) % 32);
		$45_[((($46_ + 64) >>> 9) << 4) + 14] = $46_;
		var $47_=1732584193;
		var $48_=-271733879;
		var $49_=-1732584194;
		var $50_=271733878;
		
		for(i=0;i<$45_.length;i+=16)
		{
			var $51_=$47_;
			var $52_=$48_;
			var $53_=$49_;
			var $54_=$50_;
			
			$47_=MD5.ff($47_,$48_,$49_,$50_,$45_[i+0],7,-680876936);
			$50_=MD5.ff($50_,$47_,$48_,$49_,$45_[i+1],12,-389564586);
			$49_=MD5.ff($49_,$50_,$47_,$48_,$45_[i+2],17,606105819);
			$48_=MD5.ff($48_,$49_,$50_,$47_,$45_[i+3],22,-1044525330);
			$47_=MD5.ff($47_,$48_,$49_,$50_,$45_[i+4],7,-176418897);
			$50_=MD5.ff($50_,$47_,$48_,$49_,$45_[i+5],12,1200080426);
			$49_=MD5.ff($49_,$50_,$47_,$48_,$45_[i+6],17,-1473231341);
			$48_=MD5.ff($48_,$49_,$50_,$47_,$45_[i+7],22,-45705983);
			$47_=MD5.ff($47_,$48_,$49_,$50_,$45_[i+8],7,1770035416);
			$50_=MD5.ff($50_,$47_,$48_,$49_,$45_[i+9],12,-1958414417);
			$49_=MD5.ff($49_,$50_,$47_,$48_,$45_[i+10],17,-42063);
			$48_=MD5.ff($48_,$49_,$50_,$47_,$45_[i+11],22,-1990404162);
			$47_=MD5.ff($47_,$48_,$49_,$50_,$45_[i+12],7,1804603682);
			$50_=MD5.ff($50_,$47_,$48_,$49_,$45_[i+13],12,-40341101);
			$49_=MD5.ff($49_,$50_,$47_,$48_,$45_[i+14],17,-1502002290);
			$48_=MD5.ff($48_,$49_,$50_,$47_,$45_[i+15],22,1236535329);
			$47_=MD5.gg($47_,$48_,$49_,$50_,$45_[i+1],5,-165796510);
			$50_=MD5.gg($50_,$47_,$48_,$49_,$45_[i+6],9,-1069501632);
			$49_=MD5.gg($49_,$50_,$47_,$48_,$45_[i+11],14,643717713);
			$48_=MD5.gg($48_,$49_,$50_,$47_,$45_[i+0],20,-373897302);
			$47_=MD5.gg($47_,$48_,$49_,$50_,$45_[i+5],5,-701558691);
			$50_=MD5.gg($50_,$47_,$48_,$49_,$45_[i+10],9,38016083);
			$49_=MD5.gg($49_,$50_,$47_,$48_,$45_[i+15],14,-660478335);
			$48_=MD5.gg($48_,$49_,$50_,$47_,$45_[i+4],20,-405537848);
			$47_=MD5.gg($47_,$48_,$49_,$50_,$45_[i+9],5,568446438);
			$50_=MD5.gg($50_,$47_,$48_,$49_,$45_[i+14],9,-1019803690);
			$49_=MD5.gg($49_,$50_,$47_,$48_,$45_[i+3],14,-187363961);
			$48_=MD5.gg($48_,$49_,$50_,$47_,$45_[i+8],20,1163531501);
			$47_=MD5.gg($47_,$48_,$49_,$50_,$45_[i+13],5,-1444681467);
			$50_=MD5.gg($50_,$47_,$48_,$49_,$45_[i+2],9,-51403784);
			$49_=MD5.gg($49_,$50_,$47_,$48_,$45_[i+7],14,1735328473);
			$48_=MD5.gg($48_,$49_,$50_,$47_,$45_[i+12],20,-1926607734);
			$47_=MD5.hh($47_,$48_,$49_,$50_,$45_[i+5],4,-378558);
			$50_=MD5.hh($50_,$47_,$48_,$49_,$45_[i+8],11,-2022574463);
			$49_=MD5.hh($49_,$50_,$47_,$48_,$45_[i+11],16,1839030562);
			$48_=MD5.hh($48_,$49_,$50_,$47_,$45_[i+14],23,-35309556);
			$47_=MD5.hh($47_,$48_,$49_,$50_,$45_[i+1],4,-1530992060);
			$50_=MD5.hh($50_,$47_,$48_,$49_,$45_[i+4],11,1272893353);
			$49_=MD5.hh($49_,$50_,$47_,$48_,$45_[i+7],16,-155497632);
			$48_=MD5.hh($48_,$49_,$50_,$47_,$45_[i+10],23,-1094730640);
			$47_=MD5.hh($47_,$48_,$49_,$50_,$45_[i+13],4,681279174);
			$50_=MD5.hh($50_,$47_,$48_,$49_,$45_[i+0],11,-358537222);
			$49_=MD5.hh($49_,$50_,$47_,$48_,$45_[i+3],16,-722521979);
			$48_=MD5.hh($48_,$49_,$50_,$47_,$45_[i+6],23,76029189);
			$47_=MD5.hh($47_,$48_,$49_,$50_,$45_[i+9],4,-640364487);
			$50_=MD5.hh($50_,$47_,$48_,$49_,$45_[i+12],11,-421815835);
			$49_=MD5.hh($49_,$50_,$47_,$48_,$45_[i+15],16,530742520);
			$48_=MD5.hh($48_,$49_,$50_,$47_,$45_[i+2],23,-995338651);
			$47_=MD5.ii($47_,$48_,$49_,$50_,$45_[i+0],6,-198630844);
			$50_=MD5.ii($50_,$47_,$48_,$49_,$45_[i+7],10,1126891415);
			$49_=MD5.ii($49_,$50_,$47_,$48_,$45_[i+14],15,-1416354905);
			$48_=MD5.ii($48_,$49_,$50_,$47_,$45_[i+5],21,-57434055);
			$47_=MD5.ii($47_,$48_,$49_,$50_,$45_[i+12],6,1700485571);
			$50_=MD5.ii($50_,$47_,$48_,$49_,$45_[i+3],10,-1894986606);
			$49_=MD5.ii($49_,$50_,$47_,$48_,$45_[i+10],15,-1051523);
			$48_=MD5.ii($48_,$49_,$50_,$47_,$45_[i+1],21,-2054922799);
			$47_=MD5.ii($47_,$48_,$49_,$50_,$45_[i+8],6,1873313359);
			$50_=MD5.ii($50_,$47_,$48_,$49_,$45_[i+15],10,-30611744);
			$49_=MD5.ii($49_,$50_,$47_,$48_,$45_[i+6],15,-1560198380);
			$48_=MD5.ii($48_,$49_,$50_,$47_,$45_[i+13],21,1309151649);
			$47_=MD5.ii($47_,$48_,$49_,$50_,$45_[i+4],6,-145523070);
			$50_=MD5.ii($50_,$47_,$48_,$49_,$45_[i+11],10,-1120210379);
			$49_=MD5.ii($49_,$50_,$47_,$48_,$45_[i+2],15,718787259);
			$48_=MD5.ii($48_,$49_,$50_,$47_,$45_[i+9],21,-343485551);
			$47_=MD5.add($47_,$51_);
			$48_=MD5.add($48_,$52_);
			$49_=MD5.add($49_,$53_);
			$50_=MD5.add($50_,$54_);
		}
		
		return new Array($47_,$48_,$49_,$50_);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.core_md5",arguments,ex));
	}
}

/**
 * @private
 */
MD5.core_hmac_md5=function($58_, $59_)
{
	try
	{
	  var $60_ = MD5.str2binl($58_);
	  
	  if($60_.length > 16)
	  	$60_ = MD5.core_md5($60_, $58_.length * MD5.chr_sz);
	
	  var $61_ = new Array(16);
	  var $62_ = new Array(16);
	  for(var i = 0; i < 16; i++)
	  {
	    $61_[i] = $60_[i] ^ 0x36363636;
	    $62_[i] = $60_[i] ^ 0x5C5C5C5C;
	  }
			  
	  return MD5.core_md5($62_.concat(MD5.core_md5($61_.concat(MD5.str2binl($59_)), 512 + $59_.length * MD5.chr_sz)), 512 + 128);
	}
	catch(ex)
	{
		throw new Error(getExceptionStr("MD5.core_hmac_md5",arguments,ex));
	}
}